{"version":3,"sources":["webpack:///./node_modules/shallowequal/index.js","webpack:///./src/components/post.jsx"],"names":["module","exports","objA","objB","compare","compareContext","ret","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB","Article","styled","H1","H2","style","Post","data","markdownRemark","frontmatter","html","title","date","blogPostContainer","blogPost","blogPostContent","dangerouslySetInnerHTML","__html"],"mappings":"4EACAA,EAAOC,QAAU,SAAsBC,EAAMC,EAAMC,EAASC,GAC1D,IAAIC,EAAMF,EAAUA,EAAQG,KAAKF,EAAgBH,EAAMC,QAAQ,EAE/D,QAAY,IAARG,EACF,QAASA,EAGX,GAAIJ,IAASC,EACX,OAAO,EAGT,GAAoB,iBAATD,IAAsBA,GAAwB,iBAATC,IAAsBA,EACpE,OAAO,EAGT,IAAIK,EAAQC,OAAOC,KAAKR,GACpBS,EAAQF,OAAOC,KAAKP,GAExB,GAAIK,EAAMI,SAAWD,EAAMC,OACzB,OAAO,EAKT,IAFA,IAAIC,EAAkBJ,OAAOK,UAAUC,eAAeC,KAAKb,GAElDc,EAAM,EAAGA,EAAMT,EAAMI,OAAQK,IAAO,CAC3C,IAAIC,EAAMV,EAAMS,GAEhB,IAAKJ,EAAgBK,GACnB,OAAO,EAGT,IAAIC,EAASjB,EAAKgB,GACdE,EAASjB,EAAKe,GAGlB,IAAY,KAFZZ,EAAMF,EAAUA,EAAQG,KAAKF,EAAgBc,EAAQC,EAAQF,QAAO,SAEvC,IAARZ,GAAkBa,IAAWC,EAChD,OAAO,EAIX,OAAO,I,kCCzCT,oFAMMC,GANN,oBAMgBC,YAAO,WAAV,mEAAGA,CAAH,sBAIPC,EAAKD,YAAO,MAAV,8DAAGA,CAAH,wBAGFE,EAAKF,YAAO,MAAV,8DAAGA,CAAH,4CAKFG,EACe,GADfA,EAEM,GAFNA,EAGa,GAGJ,SAASC,EAAT,GAAyB,IAAD,IAARC,KACMC,eAA3BC,EAD6B,EAC7BA,YAAaC,EADgB,EAChBA,KACbC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACPC,EAAiDR,EAA9BS,EAA8BT,EAApBU,EAAoBV,EACzD,OACE,kBAACJ,EAAD,CAASI,MAAOS,GACd,yBAAKT,MAAOQ,GACV,kBAACV,EAAD,KAAKQ,GACL,kBAACP,EAAD,KAAKQ,GACL,yBACEP,MAAOU,EACPC,wBAAyB,CAAEC,OAAQP,S","file":"component---src-components-post-jsx-c661308d6bb35594b4ef.js","sourcesContent":["//\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB); // Test for A's keys different from B.\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || ret === void 0 && valueA !== valueB) {\n      return false;\n    }\n  }\n\n  return true;\n};","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport 'katex/dist/katex.min.css'\nimport './post.css'\n\nconst Article = styled('article')`\n  margin: 2em 1em;\n`\n\nconst H1 = styled('h1')`\n  text-align: center;\n`\nconst H2 = styled('h2')`\n  text-align: center;\n  font-weight: lighter;\n`\n\nconst style = {\n  blogPostContainer: {},\n  blogPost: {},\n  blogPostContent: {}\n}\n\nexport default function Post({ data }) {\n  const { frontmatter, html } = data.markdownRemark\n  const { title, date } = frontmatter\n  const { blogPostContainer, blogPost, blogPostContent } = style\n  return (\n    <Article style={blogPost}>\n      <div style={blogPostContainer}>\n        <H1>{title}</H1>\n        <H2>{date}</H2>\n        <div\n          style={blogPostContent}\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </Article>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      ...Post\n      html\n    }\n  }\n`\n"],"sourceRoot":""}