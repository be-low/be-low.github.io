{"componentChunkName":"component---src-components-post-jsx","path":"/post/csapp bomb wripteup","result":{"data":{"markdownRemark":{"id":"792ab452-4aee-5902-9534-b49b8b8afd96","frontmatter":{"date":"August 21, 2020","draft":null,"tags":null,"title":"csapp bomb wripteup"},"html":"<p>只是很粗糙的日志</p>\n<h2>phase 2</h2>\n<h3><code class=\"language-text\">read_six_numbers(char*,?)</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"assemble\"><pre class=\"language-assemble\"><code class=\"language-assemble\">0x000000000040145c &lt;+0&gt;:     sub    $0x18,%rsp\n0x0000000000401460 &lt;+4&gt;:     mov    %rsi,%rdx\n0x0000000000401463 &lt;+7&gt;:     lea    0x4(%rsi),%rcx\n0x0000000000401467 &lt;+11&gt;:    lea    0x14(%rsi),%rax\n0x000000000040146b &lt;+15&gt;:    mov    %rax,0x8(%rsp)\n0x0000000000401470 &lt;+20&gt;:    lea    0x10(%rsi),%rax\n0x0000000000401474 &lt;+24&gt;:    mov    %rax,(%rsp)\n0x0000000000401478 &lt;+28&gt;:    lea    0xc(%rsi),%r9\n0x000000000040147c &lt;+32&gt;:    lea    0x8(%rsi),%r8\n0x0000000000401480 &lt;+36&gt;:    mov    $0x4025c3,%esi\n0x0000000000401485 &lt;+41&gt;:    mov    $0x0,%eax\n0x000000000040148a &lt;+46&gt;:    callq  0x400bf0 &lt;__isoc99_sscanf@plt&gt;\n0x000000000040148f &lt;+51&gt;:    cmp    $0x5,%eax\n0x0000000000401492 &lt;+54&gt;:    jg     0x401499 &lt;read_six_numbers+61&gt;\n0x0000000000401494 &lt;+56&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n0x0000000000401499 &lt;+61&gt;:    add    $0x18,%rsp\n0x000000000040149d &lt;+65&gt;:    retq</code></pre></div>\n<h3><code class=\"language-text\">phase2(char*)</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"assemble\"><pre class=\"language-assemble\"><code class=\"language-assemble\">0x0000000000400efc &lt;+0&gt;:     push   %rbp\n0x0000000000400efd &lt;+1&gt;:     push   %rbx\n0x0000000000400efe &lt;+2&gt;:     sub    $0x28,%rsp\n0x0000000000400f02 &lt;+6&gt;:     mov    %rsp,%rsi\n0x0000000000400f05 &lt;+9&gt;:     callq  0x40145c &lt;read_six_numbers&gt;\n0x0000000000400f0a &lt;+14&gt;:    cmpl   $0x1,(%rsp)\n0x0000000000400f0e &lt;+18&gt;:    je     0x400f30 &lt;phase_2+52&gt;\n0x0000000000400f10 &lt;+20&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n0x0000000000400f15 &lt;+25&gt;:    jmp    0x400f30 &lt;phase_2+52&gt;\n0x0000000000400f17 &lt;+27&gt;:    mov    -0x4(%rbx),%eax\n0x0000000000400f1a &lt;+30&gt;:    add    %eax,%eax\n0x0000000000400f1c &lt;+32&gt;:    cmp    %eax,(%rbx)\n0x0000000000400f1e &lt;+34&gt;:    je     0x400f25 &lt;phase_2+41&gt;\n0x0000000000400f20 &lt;+36&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n0x0000000000400f25 &lt;+41&gt;:    add    $0x4,%rbx\n0x0000000000400f29 &lt;+45&gt;:    cmp    %rbp,%rbx\n0x0000000000400f2c &lt;+48&gt;:    jne    0x400f17 &lt;phase_2+27&gt;\n0x0000000000400f2e &lt;+50&gt;:    jmp    0x400f3c &lt;phase_2+64&gt;\n0x0000000000400f30 &lt;+52&gt;:    lea    0x4(%rsp),%rbx\n0x0000000000400f35 &lt;+57&gt;:    lea    0x18(%rsp),%rbp\n0x0000000000400f3a &lt;+62&gt;:    jmp    0x400f17 &lt;phase_2+27&gt;\n0x0000000000400f3c &lt;+64&gt;:    add    $0x28,%rsp\n0x0000000000400f40 &lt;+68&gt;:    pop    %rbx\n0x0000000000400f41 &lt;+69&gt;:    pop    %rbp\n0x0000000000400f42 &lt;+70&gt;:    retq</code></pre></div>\n<h3>sixty registers</h3>\n<p>six argument register</p>\n<ol>\n<li>rdi</li>\n<li>rsi</li>\n<li>rdx</li>\n<li>rcx</li>\n<li>r8</li>\n<li>r9</li>\n<li>rax: return value</li>\n<li>rbx: callee saved</li>\n<li>rbp: base reg; callee saved</li>\n<li>rsp: stack ptr</li>\n<li>r10-11: temporary reg</li>\n<li>r12-15: callee saved</li>\n</ol>\n<p>在 <code class=\"language-text\">__isoc99_sscanf@plt</code> 中断，观察到</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> printf <span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> $rsi\n<span class=\"token operator\">%</span>d <span class=\"token operator\">%</span>d <span class=\"token operator\">%</span>d <span class=\"token operator\">%</span>d <span class=\"token operator\">%</span>d <span class=\"token operator\">%</span>d</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">   0x000000000040148a &lt;+46&gt;:    callq  0x400bf0 &lt;__isoc99_sscanf@plt&gt;\n   0x000000000040148f &lt;+51&gt;:    cmp    $0x5,%eax\n   0x0000000000401492 &lt;+54&gt;:    jg     0x401499 &lt;read_six_numbers+61&gt;\n=&gt; 0x0000000000401494 &lt;+56&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000401499 &lt;+61&gt;:    add    $0x18,%rsp</code></pre></div>\n<p>所以第一个参数就是输入的第二个字符串，而且需要匹配到6整数</p>\n<p>6个数的位置</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0x0000000000401460 &lt;+4&gt;:     mov    %rsi,%rdx\n0x0000000000401463 &lt;+7&gt;:     lea    0x4(%rsi),%rcx\n0x0000000000401467 &lt;+11&gt;:    lea    0x14(%rsi),%rax\n0x000000000040146b &lt;+15&gt;:    mov    %rax,0x8(%rsp)\n0x0000000000401470 &lt;+20&gt;:    lea    0x10(%rsi),%rax\n0x0000000000401474 &lt;+24&gt;:    mov    %rax,(%rsp)\n0x0000000000401478 &lt;+28&gt;:    lea    0xc(%rsi),%r9\n0x000000000040147c &lt;+32&gt;:    lea    0x8(%rsi),%r8</code></pre></div>\n<p>rdx-r9 4个寄存器，加上两个 stack 的 ptr</p>\n<p>而 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>s</mi><mi>p</mi><mo>=</mo><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">rsp ==</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span>rsi-0x18</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>d</mi><mi>x</mi><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">rdx =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsi</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>c</mi><mi>x</mi><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">rcx =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsi+4</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mn>8</mn><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">r8 =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsi+8</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mn>9</mn><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">r9 =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsi+0xc</li>\n<li>(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>s</mi><mi>p</mi><mo stretchy=\"false\">)</mo><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">rsp) =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsi+0x10</li>\n<li>(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>s</mi><mi>p</mi><mo>+</mo><mn>8</mn><mo stretchy=\"false\">)</mo><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">rsp+8) =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7777700000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">8</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsi+0x14</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0x0000000000400f0a &lt;+14&gt;:    cmpl   $0x1,(%rsp)\n0x0000000000400f0e &lt;+18&gt;:    je     0x400f30 &lt;phase_2+52&gt;\n0x0000000000400f10 &lt;+20&gt;:    callq  0x40143a &lt;explode_bomb&gt;</code></pre></div>\n<p>第一个限定为 1</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0x0000000000400f30 &lt;+52&gt;:    lea    0x4(%rsp),%rbx\n0x0000000000400f35 &lt;+57&gt;:    lea    0x18(%rsp),%rbp\n0x0000000000400f3a &lt;+62&gt;:    jmp    0x400f17 &lt;phase_2+27&gt;</code></pre></div>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>b</mi><mi>x</mi><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">rbx =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsp + 0x4\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>b</mi><mi>p</mi><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">rbp =</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsp + 0x18</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">=&gt; 0x0000000000400f17 &lt;+27&gt;:    mov    -0x4(%rbx),%eax\n   0x0000000000400f1a &lt;+30&gt;:    add    %eax,%eax\n   0x0000000000400f1c &lt;+32&gt;:    cmp    %eax,(%rbx)\n   0x0000000000400f1e &lt;+34&gt;:    je     0x400f25 &lt;phase_2+41&gt;\n   0x0000000000400f20 &lt;+36&gt;:    callq  0x40143a &lt;explode_bomb&gt;</code></pre></div>\n<p>这里 rsi 被赋值为0了，但它应该等于现在的 $rsp</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>a</mi><mi>x</mi><mo>=</mo><mo>=</mo><mo stretchy=\"false\">(</mo></mrow><annotation encoding=\"application/x-tex\">eax == (</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span></span></span></span>rbx-4) = ($rsp)</p>\n<p>{\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>a</mi><mi>x</mi><mo>=</mo><mn>2</mn><mo>∗</mo></mrow><annotation encoding=\"application/x-tex\">eax = 2 *</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">∗</span></span></span></span>eax\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>a</mi><mi>x</mi><mo>−</mo><mo stretchy=\"false\">(</mo></mrow><annotation encoding=\"application/x-tex\">eax - (</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span></span></span></span>rbx) = 0\n}</p>\n<p>2 * (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>s</mi><mi>p</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mo stretchy=\"false\">(</mo></mrow><annotation encoding=\"application/x-tex\">rsp) - (</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span></span></span></span>rsp+4) == 0</p>\n<p>($rsp) = 1</p>\n<p>2 - x = 0</p>\n<p>第二个数</p>\n<p>x = 2</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>b</mi><mi>x</mi><mo>+</mo><mo>=</mo><mn>0</mn><mi>x</mi><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">rbx += 0x4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">+</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">4</span></span></span></span>rbp - <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>b</mi><mi>x</mi><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">rbx\n=</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>rsp + 0x18 - $rsp + 0x8\n= 0x10</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">=&gt; 0x0000000000400f17 &lt;+27&gt;:    mov    -0x4(%rbx),%eax\n   0x0000000000400f1a &lt;+30&gt;:    add    %eax,%eax\n   0x0000000000400f1c &lt;+32&gt;:    cmp    %eax,(%rbx)\n   0x0000000000400f1e &lt;+34&gt;:    je     0x400f25 &lt;phase_2+41&gt;\n   0x0000000000400f20 &lt;+36&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000400f25 &lt;+41&gt;:    add    $0x4,%rbx\n   0x0000000000400f29 &lt;+45&gt;:    cmp    %rbp,%rbx\n   0x0000000000400f2c &lt;+48&gt;:    jne    0x400f17 &lt;phase_2+27&gt;</code></pre></div>\n<p>容易看出，这是个循环\n每次迭代都希望 后一个数 y 与前一个数 x，满足</p>\n<p>2<em>x - y = 0\ny = 2</em>x</p>\n<p>一共五次迭代</p>\n<p>所以得出: \"1 2 4 8 16 32\"</p>\n<h2>phase 3</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Dump of assembler code for function phase_3:\n   0x0000000000400f43 &lt;+0&gt;:     sub    $0x18,%rsp\n   0x0000000000400f47 &lt;+4&gt;:     lea    0xc(%rsp),%rcx\n   0x0000000000400f4c &lt;+9&gt;:     lea    0x8(%rsp),%rdx\n   0x0000000000400f51 &lt;+14&gt;:    mov    $0x4025cf,%esi\n=&gt; 0x0000000000400f56 &lt;+19&gt;:    mov    $0x0,%eax\n   0x0000000000400f5b &lt;+24&gt;:    callq  0x400bf0 &lt;__isoc99_sscanf@plt&gt;\n   0x0000000000400f60 &lt;+29&gt;:    cmp    $0x1,%eax\n   0x0000000000400f63 &lt;+32&gt;:    jg     0x400f6a &lt;phase_3+39&gt;\n   0x0000000000400f65 &lt;+34&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000400f6a &lt;+39&gt;:    cmpl   $0x7,0x8(%rsp)\n   0x0000000000400f6f &lt;+44&gt;:    ja     0x400fad &lt;phase_3+106&gt;\n   0x0000000000400f71 &lt;+46&gt;:    mov    0x8(%rsp),%eax\n   0x0000000000400f75 &lt;+50&gt;:    jmpq   *0x402470(,%rax,8)\n   0x0000000000400f7c &lt;+57&gt;:    mov    $0xcf,%eax\n   0x0000000000400f81 &lt;+62&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f83 &lt;+64&gt;:    mov    $0x2c3,%eax\n   0x0000000000400f88 &lt;+69&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f8a &lt;+71&gt;:    mov    $0x100,%eax\n   0x0000000000400f8f &lt;+76&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f91 &lt;+78&gt;:    mov    $0x185,%eax\n   0x0000000000400f96 &lt;+83&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f98 &lt;+85&gt;:    mov    $0xce,%eax\n   0x0000000000400f9d &lt;+90&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f9f &lt;+92&gt;:    mov    $0x2aa,%eax\n   0x0000000000400fa4 &lt;+97&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400fa6 &lt;+99&gt;:    mov    $0x147,%eax\n   0x0000000000400fab &lt;+104&gt;:   jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400fad &lt;+106&gt;:   callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000400fb2 &lt;+111&gt;:   mov    $0x0,%eax\n   0x0000000000400fb7 &lt;+116&gt;:   jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400fb9 &lt;+118&gt;:   mov    $0x137,%eax\n   0x0000000000400fbe &lt;+123&gt;:   cmp    0xc(%rsp),%eax\n   0x0000000000400fc2 &lt;+127&gt;:   je     0x400fc9 &lt;phase_3+134&gt;\n   0x0000000000400fc4 &lt;+129&gt;:   callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000400fc9 &lt;+134&gt;:   add    $0x18,%rsp\n   0x0000000000400fcd &lt;+138&gt;:   retq</code></pre></div>\n<p>开始还是有一样的套路，开始是两个整数</p>\n<ol>\n<li>%rsp+0x8</li>\n<li>$rsp+0xc</li>\n</ol>\n<p>0x7 - (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>s</mi><mi>p</mi><mo>+</mo><mn>0</mn><mi>x</mi><mn>8</mn><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mo>=</mo><mn>0</mn><mi>j</mi><mi>m</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo></mrow><annotation encoding=\"application/x-tex\">rsp+0x8) &lt;= 0\njmp ((</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7777700000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">8</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">p</span><span class=\"mopen\">(</span><span class=\"mopen\">(</span></span></span></span>rsp+0x8)*8 + 0x402470)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(gdb) x/8x 0x402470\n0x402470:       0x0000000000400f7c      0x0000000000400fb9\n0x402480:       0x0000000000400f83      0x0000000000400f8a\n0x402490:       0x0000000000400f91      0x0000000000400f98\n0x4024a0:       0x0000000000400f9f      0x0000000000400fa6</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">   0x0000000000400f7c &lt;+57&gt;:    mov    $0xcf,%eax\n   0x0000000000400f81 &lt;+62&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f83 &lt;+64&gt;:    mov    $0x2c3,%eax\n   0x0000000000400f88 &lt;+69&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f8a &lt;+71&gt;:    mov    $0x100,%eax\n   0x0000000000400f8f &lt;+76&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f91 &lt;+78&gt;:    mov    $0x185,%eax\n   0x0000000000400f96 &lt;+83&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f98 &lt;+85&gt;:    mov    $0xce,%eax\n   0x0000000000400f9d &lt;+90&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400f9f &lt;+92&gt;:    mov    $0x2aa,%eax\n   0x0000000000400fa4 &lt;+97&gt;:    jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400fa6 &lt;+99&gt;:    mov    $0x147,%eax\n   0x0000000000400fab &lt;+104&gt;:   jmp    0x400fbe &lt;phase_3+123&gt;\n   0x0000000000400fad &lt;+106&gt;:   callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000400fb2 &lt;+111&gt;:   mov    $0x0,%eax\n   0x0000000000400fb7 &lt;+116&gt;:   jmp    0x400fbe &lt;phase_3+123&gt;\n=&gt; 0x0000000000400fb9 &lt;+118&gt;:   mov    $0x137,%eax</code></pre></div>\n<p>根据 (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>s</mi><mi>p</mi><mo>+</mo><mn>0</mn><mi>x</mi><mn>8</mn><mo stretchy=\"false\">)</mo><mtext>的值来选择</mtext></mrow><annotation encoding=\"application/x-tex\">rsp+0x8) 的值来选择</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7777700000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">8</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">值</span><span class=\"mord cjk_fallback\">来</span><span class=\"mord cjk_fallback\">选</span><span class=\"mord cjk_fallback\">择</span></span></span></span>eax 的值</p>\n<p>(%rsp+0xc) - $eax == 0</p>\n<p>0 0xcf\n1 0x137\n2 0x2c3\n3 0x100\n4 0x185\n5 0xce\n6 0x2aa\n7 0x147</p>\n<p>0 207\n1 311\n2 707\n3 256\n4 389\n5 206\n6 682\n7 327</p>\n<h2>phase 4</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Dump of assembler code for function phase_4:\n=&gt; 0x000000000040100c &lt;+0&gt;:     sub    $0x18,%rsp\n   0x0000000000401010 &lt;+4&gt;:     lea    0xc(%rsp),%rcx\n   0x0000000000401015 &lt;+9&gt;:     lea    0x8(%rsp),%rdx\n   0x000000000040101a &lt;+14&gt;:    mov    $0x4025cf,%esi\n   0x000000000040101f &lt;+19&gt;:    mov    $0x0,%eax\n   0x0000000000401024 &lt;+24&gt;:    callq  0x400bf0 &lt;__isoc99_sscanf@plt&gt;\n   0x0000000000401029 &lt;+29&gt;:    cmp    $0x2,%eax\n   0x000000000040102c &lt;+32&gt;:    jne    0x401035 &lt;phase_4+41&gt;\n   0x000000000040102e &lt;+34&gt;:    cmpl   $0xe,0x8(%rsp)\n   0x0000000000401033 &lt;+39&gt;:    jbe    0x40103a &lt;phase_4+46&gt;\n   0x0000000000401035 &lt;+41&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n   0x000000000040103a &lt;+46&gt;:    mov    $0xe,%edx\n   0x000000000040103f &lt;+51&gt;:    mov    $0x0,%esi\n   0x0000000000401044 &lt;+56&gt;:    mov    0x8(%rsp),%edi\n   0x0000000000401048 &lt;+60&gt;:    callq  0x400fce &lt;func4&gt;\n   0x000000000040104d &lt;+65&gt;:    test   %eax,%eax\n   0x000000000040104f &lt;+67&gt;:    jne    0x401058 &lt;phase_4+76&gt;\n   0x0000000000401051 &lt;+69&gt;:    cmpl   $0x0,0xc(%rsp)\n   0x0000000000401056 &lt;+74&gt;:    je     0x40105d &lt;phase_4+81&gt;\n   0x0000000000401058 &lt;+76&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n   0x000000000040105d &lt;+81&gt;:    add    $0x18,%rsp\n   0x0000000000401061 &lt;+85&gt;:    retq</code></pre></div>\n<p>开始还是有一样的套路，开始是两个整数</p>\n<ol>\n<li>%rsp+0x8</li>\n<li>$rsp+0xc</li>\n</ol>\n<p>0xe - (%rsp+0x8) &#x3C;= 0\n&#x3C;= 14</p>\n<p>fun4((%rsp+0x8),0x0,0xe) = 0\n(%rsp+0xc) = 0</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Dump of assembler code for function func4:\n=&gt; 0x0000000000400fce &lt;+0&gt;:     sub    $0x8,%rsp\n   0x0000000000400fd2 &lt;+4&gt;:     mov    %edx,%eax\n   0x0000000000400fd4 &lt;+6&gt;:     sub    %esi,%eax\n   0x0000000000400fd6 &lt;+8&gt;:     mov    %eax,%ecx\n   0x0000000000400fd8 &lt;+10&gt;:    shr    $0x1f,%ecx\n   0x0000000000400fdb &lt;+13&gt;:    add    %ecx,%eax\n   0x0000000000400fdd &lt;+15&gt;:    sar    %eax\n   0x0000000000400fdf &lt;+17&gt;:    lea    (%rax,%rsi,1),%ecx\n   0x0000000000400fe2 &lt;+20&gt;:    cmp    %edi,%ecx\n   0x0000000000400fe4 &lt;+22&gt;:    jle    0x400ff2 &lt;func4+36&gt;\n   0x0000000000400fe6 &lt;+24&gt;:    lea    -0x1(%rcx),%edx\n   0x0000000000400fe9 &lt;+27&gt;:    callq  0x400fce &lt;func4&gt;\n   0x0000000000400fee &lt;+32&gt;:    add    %eax,%eax\n   0x0000000000400ff0 &lt;+34&gt;:    jmp    0x401007 &lt;func4+57&gt;\n   0x0000000000400ff2 &lt;+36&gt;:    mov    $0x0,%eax\n   0x0000000000400ff7 &lt;+41&gt;:    cmp    %edi,%ecx\n   0x0000000000400ff9 &lt;+43&gt;:    jge    0x401007 &lt;func4+57&gt;\n   0x0000000000400ffb &lt;+45&gt;:    lea    0x1(%rcx),%esi\n   0x0000000000400ffe &lt;+48&gt;:    callq  0x400fce &lt;func4&gt;\n   0x0000000000401003 &lt;+53&gt;:    lea    0x1(%rax,%rax,1),%eax\n   0x0000000000401007 &lt;+57&gt;:    add    $0x8,%rsp\n   0x000000000040100b &lt;+61&gt;:    retq</code></pre></div>\n<p>瞎猜一下 \"0 0\", 竟然过了\n不过也是根据已有的信息， a &#x3C;= 14, b = 0</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function fun4(a, b, c){\n   val0 = c - b\n   val1 = val0 &gt;&gt; 0x1f\n   val0 += val1\n   val0 &gt;&gt;&gt;= 1\n   val1 = val0 + b\n\n   if a &lt;= val1 {\n      val0 = 0\n      if a &gt;= val1 {\n         return val0;\n      }\n      b = val1 + 1\n      func()\n      val0 = 1\n      return val0\n   } else {\n      c = val1 - 1\n      func()\n      val0 += val0\n      return val0\n   }\n\n   return val0\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">val0 = c - b\nval1 = val0 &gt;&gt; 0x1f\nval0 += val1\nval0 &gt;&gt;&gt;= 1\nval1 = val0 + b</code></pre></div>\n<p>也是看一会不知道是干嘛，以为是很复杂，突然想起来了。其实就是相当于 /2\nCSAPP 里浮点数表示之前有一节讲过， val1 取出符号位，作为 /2 的一个偏移。\nval0 再用算术位移，就可以同时支持正数和负数的 floor。</p>\n<p>so val0 = floor((c-b)/2)， val1 = floor((b+c)/2)</p>\n<p>可以看出， a == val1 时，就可以直接返回 0</p>\n<p>而 val1 一开始是7, 而且会一直做类似二分搜索类似的递归。</p>\n<p>所以输入 \"[0-7] 0\" 都可以过</p>\n<p>我把 cmp 的参数顺序搞反， 但是这样竟然得出了正确的结论，真神奇</p>\n<h2>phase 5</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Dump of assembler code for function phase_5:\n=&gt; 0x0000000000401062 &lt;+0&gt;:     push   %rbx\n   0x0000000000401063 &lt;+1&gt;:     sub    $0x20,%rsp\n   0x0000000000401067 &lt;+5&gt;:     mov    %rdi,%rbx\n   0x000000000040106a &lt;+8&gt;:     mov    %fs:0x28,%rax\n   0x0000000000401073 &lt;+17&gt;:    mov    %rax,0x18(%rsp)\n   0x0000000000401078 &lt;+22&gt;:    xor    %eax,%eax\n   0x000000000040107a &lt;+24&gt;:    callq  0x40131b &lt;string_length&gt;\n   0x000000000040107f &lt;+29&gt;:    cmp    $0x6,%eax\n   0x0000000000401082 &lt;+32&gt;:    je     0x4010d2 &lt;phase_5+112&gt;\n   0x0000000000401084 &lt;+34&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000401089 &lt;+39&gt;:    jmp    0x4010d2 &lt;phase_5+112&gt;\n   0x000000000040108b &lt;+41&gt;:    movzbl (%rbx,%rax,1),%ecx\n   0x000000000040108f &lt;+45&gt;:    mov    %cl,(%rsp)\n   0x0000000000401092 &lt;+48&gt;:    mov    (%rsp),%rdx\n   0x0000000000401096 &lt;+52&gt;:    and    $0xf,%edx\n   0x0000000000401099 &lt;+55&gt;:    movzbl 0x4024b0(%rdx),%edx\n   0x00000000004010a0 &lt;+62&gt;:    mov    %dl,0x10(%rsp,%rax,1)\n   0x00000000004010a4 &lt;+66&gt;:    add    $0x1,%rax\n   0x00000000004010a8 &lt;+70&gt;:    cmp    $0x6,%rax\n   0x00000000004010ac &lt;+74&gt;:    jne    0x40108b &lt;phase_5+41&gt;\n   0x00000000004010ae &lt;+76&gt;:    movb   $0x0,0x16(%rsp)\n   0x00000000004010b3 &lt;+81&gt;:    mov    $0x40245e,%esi\n   0x00000000004010b8 &lt;+86&gt;:    lea    0x10(%rsp),%rdi\n   0x00000000004010bd &lt;+91&gt;:    callq  0x401338 &lt;strings_not_equal&gt;\n   0x00000000004010c2 &lt;+96&gt;:    test   %eax,%eax\n   0x00000000004010c4 &lt;+98&gt;:    je     0x4010d9 &lt;phase_5+119&gt;\n   0x00000000004010c6 &lt;+100&gt;:   callq  0x40143a &lt;explode_bomb&gt;\n   0x00000000004010cb &lt;+105&gt;:   nopl   0x0(%rax,%rax,1)\n   0x00000000004010d0 &lt;+110&gt;:   jmp    0x4010d9 &lt;phase_5+119&gt;\n   0x00000000004010d2 &lt;+112&gt;:   mov    $0x0,%eax\n   0x00000000004010d7 &lt;+117&gt;:   jmp    0x40108b &lt;phase_5+41&gt;\n   0x00000000004010d9 &lt;+119&gt;:   mov    0x18(%rsp),%rax\n   0x00000000004010de &lt;+124&gt;:   xor    %fs:0x28,%rax\n   0x00000000004010e7 &lt;+133&gt;:   je     0x4010ee &lt;phase_5+140&gt;\n   0x00000000004010e9 &lt;+135&gt;:   callq  0x400b30 &lt;__stack_chk_fail@plt&gt;\n   0x00000000004010ee &lt;+140&gt;:   add    $0x20,%rsp\n   0x00000000004010f2 &lt;+144&gt;:   pop    %rbx\n   0x00000000004010f3 &lt;+145&gt;:   retq</code></pre></div>\n<p>首先 断言了输入长度为6\n然后是一个循环</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">   0x000000000040108b &lt;+41&gt;:    movzbl (%rbx,%rax,1),%ecx\n   0x000000000040108f &lt;+45&gt;:    mov    %cl,(%rsp)\n   0x0000000000401092 &lt;+48&gt;:    mov    (%rsp),%rdx\n   0x0000000000401096 &lt;+52&gt;:    and    $0xf,%edx\n   0x0000000000401099 &lt;+55&gt;:    movzbl 0x4024b0(%rdx),%edx\n   0x00000000004010a0 &lt;+62&gt;:    mov    %dl,0x10(%rsp,%rax,1)\n   0x00000000004010a4 &lt;+66&gt;:    add    $0x1,%rax\n   0x00000000004010a8 &lt;+70&gt;:    cmp    $0x6,%rax\n   0x00000000004010ac &lt;+74&gt;:    jne    0x40108b &lt;phase_5+41&gt;</code></pre></div>\n<p>%cl 和 $dl 还挺迷惑的，其实他们是通用寄存器的低8位部分</p>\n<p>eax -> ah al\nebx -> bh bl\necx -> ch cl\nedx -> dh dl</p>\n<p>x 是32bit, h 是 16, l 是 8。 感觉也都是历史遗留，rsi rdi r8-15 这种就没有符合规则</p>\n<p>$0x40245e = \"flyers\"\n然后比较字符串，需要他们相等</p>\n<p>0x10(%rsp) == <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mi>x</mi><mn>40245</mn><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">0x40245e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">4</span><span class=\"mord\">0</span><span class=\"mord\">2</span><span class=\"mord\">4</span><span class=\"mord\">5</span><span class=\"mord mathdefault\">e</span></span></span></span>0x4024b0 = \"maduiersnfotvbylSo you think you can stop the bomb with ctrl-c, do you?\"</p>\n<p>rax -> 0:6\n(0x4024b0 + (inp[i] &#x26; 0xf)) == \"flyers\"[i]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">In [1]: s = &quot;maduiersnfotvbylSo you think you can stop the bomb with ctrl-c, do you?&quot;\n\nIn [2]: t = &quot;flyers&quot;\n\nIn [3]: for i in range(len(t)):\n   ...:     print(s.find(t[i]))\n   ...:\n9\n15\n14\n5\n6\n7\n\nIn [4]: [s.find(t[i]) for i in range(len(t))]\nOut[4]: [9, 15, 14, 5, 6, 7]</code></pre></div>\n<p>我找到了符合的字节序列，但是似乎不能编码成可见字符\n也许可以加个偏移，反正有这个 inp[i] &#x26; 0xf</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">In [16]: [bytes(map(lambda x: x+0x10*i,result)).decode(&quot;ascii&quot;)  for i in range(8)]\nOut[16]:\n[&#39;\\t\\x0f\\x0e\\x05\\x06\\x07&#39;,\n &#39;\\x19\\x1f\\x1e\\x15\\x16\\x17&#39;,\n &quot;)/.%&amp;&#39;&quot;,\n &#39;9?&gt;567&#39;,\n &#39;IONEFG&#39;,\n &#39;Y_^UVW&#39;,\n &#39;ionefg&#39;,\n &#39;y\\x7f~uvw&#39;]</code></pre></div>\n<h2>phase 6</h2>\n<p>最后一个，很长了</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Dump of assembler code for function phase_6:\n=&gt; 0x00000000004010f4 &lt;+0&gt;:     push   %r14\n   0x00000000004010f6 &lt;+2&gt;:     push   %r13\n   0x00000000004010f8 &lt;+4&gt;:     push   %r12\n   0x00000000004010fa &lt;+6&gt;:     push   %rbp\n   0x00000000004010fb &lt;+7&gt;:     push   %rbx\n   0x00000000004010fc &lt;+8&gt;:     sub    $0x50,%rsp\n   0x0000000000401100 &lt;+12&gt;:    mov    %rsp,%r13\n   0x0000000000401103 &lt;+15&gt;:    mov    %rsp,%rsi\n   0x0000000000401106 &lt;+18&gt;:    callq  0x40145c &lt;read_six_numbers&gt;\n   0x000000000040110b &lt;+23&gt;:    mov    %rsp,%r14\n   0x000000000040110e &lt;+26&gt;:    mov    $0x0,%r12d\n   0x0000000000401114 &lt;+32&gt;:    mov    %r13,%rbp\n   0x0000000000401117 &lt;+35&gt;:    mov    0x0(%r13),%eax\n   0x000000000040111b &lt;+39&gt;:    sub    $0x1,%eax\n   0x000000000040111e &lt;+42&gt;:    cmp    $0x5,%eax\n   0x0000000000401121 &lt;+45&gt;:    jbe    0x401128 &lt;phase_6+52&gt;\n   0x0000000000401123 &lt;+47&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000401128 &lt;+52&gt;:    add    $0x1,%r12d\n   0x000000000040112c &lt;+56&gt;:    cmp    $0x6,%r12d\n   0x0000000000401130 &lt;+60&gt;:    je     0x401153 &lt;phase_6+95&gt;\n   0x0000000000401132 &lt;+62&gt;:    mov    %r12d,%ebx\n   0x0000000000401135 &lt;+65&gt;:    movslq %ebx,%rax\n   0x0000000000401138 &lt;+68&gt;:    mov    (%rsp,%rax,4),%eax\n   0x000000000040113b &lt;+71&gt;:    cmp    %eax,0x0(%rbp)\n   0x000000000040113e &lt;+74&gt;:    jne    0x401145 &lt;phase_6+81&gt;\n   0x0000000000401140 &lt;+76&gt;:    callq  0x40143a &lt;explode_bomb&gt;\n   0x0000000000401145 &lt;+81&gt;:    add    $0x1,%ebx\n   0x0000000000401148 &lt;+84&gt;:    cmp    $0x5,%ebx\n   0x000000000040114b &lt;+87&gt;:    jle    0x401135 &lt;phase_6+65&gt;\n   0x000000000040114d &lt;+89&gt;:    add    $0x4,%r13\n   0x0000000000401151 &lt;+93&gt;:    jmp    0x401114 &lt;phase_6+32&gt;\n   0x0000000000401153 &lt;+95&gt;:    lea    0x18(%rsp),%rsi\n   0x0000000000401158 &lt;+100&gt;:   mov    %r14,%rax\n   0x000000000040115b &lt;+103&gt;:   mov    $0x7,%ecx\n   0x0000000000401160 &lt;+108&gt;:   mov    %ecx,%edx\n   0x0000000000401162 &lt;+110&gt;:   sub    (%rax),%edx\n   0x0000000000401164 &lt;+112&gt;:   mov    %edx,(%rax)\n   0x0000000000401166 &lt;+114&gt;:   add    $0x4,%rax\n   0x000000000040116a &lt;+118&gt;:   cmp    %rsi,%rax\n   0x000000000040116d &lt;+121&gt;:   jne    0x401160 &lt;phase_6+108&gt;\n   0x000000000040116f &lt;+123&gt;:   mov    $0x0,%esi\n   0x0000000000401174 &lt;+128&gt;:   jmp    0x401197 &lt;phase_6+163&gt;\n   0x0000000000401176 &lt;+130&gt;:   mov    0x8(%rdx),%rdx\n   0x000000000040117a &lt;+134&gt;:   add    $0x1,%eax\n   0x000000000040117d &lt;+137&gt;:   cmp    %ecx,%eax\n   0x000000000040117f &lt;+139&gt;:   jne    0x401176 &lt;phase_6+130&gt;\n   0x0000000000401181 &lt;+141&gt;:   jmp    0x401188 &lt;phase_6+148&gt;\n   0x0000000000401183 &lt;+143&gt;:   mov    $0x6032d0,%edx\n   0x0000000000401188 &lt;+148&gt;:   mov    %rdx,0x20(%rsp,%rsi,2)\n   0x000000000040118d &lt;+153&gt;:   add    $0x4,%rsi\n   0x0000000000401191 &lt;+157&gt;:   cmp    $0x18,%rsi\n   0x0000000000401195 &lt;+161&gt;:   je     0x4011ab &lt;phase_6+183&gt;\n   0x0000000000401197 &lt;+163&gt;:   mov    (%rsp,%rsi,1),%ecx\n   0x000000000040119a &lt;+166&gt;:   cmp    $0x1,%ecx\n   0x000000000040119d &lt;+169&gt;:   jle    0x401183 &lt;phase_6+143&gt;\n   0x000000000040119f &lt;+171&gt;:   mov    $0x1,%eax\n   0x00000000004011a4 &lt;+176&gt;:   mov    $0x6032d0,%edx\n   0x00000000004011a9 &lt;+181&gt;:   jmp    0x401176 &lt;phase_6+130&gt;\n   0x00000000004011ab &lt;+183&gt;:   mov    0x20(%rsp),%rbx\n   0x00000000004011b0 &lt;+188&gt;:   lea    0x28(%rsp),%rax\n   0x00000000004011b5 &lt;+193&gt;:   lea    0x50(%rsp),%rsi\n   0x00000000004011ba &lt;+198&gt;:   mov    %rbx,%rcx\n   0x00000000004011bd &lt;+201&gt;:   mov    (%rax),%rdx\n   0x00000000004011c0 &lt;+204&gt;:   mov    %rdx,0x8(%rcx)\n   0x00000000004011c4 &lt;+208&gt;:   add    $0x8,%rax\n   0x00000000004011c8 &lt;+212&gt;:   cmp    %rsi,%rax\n   0x00000000004011cb &lt;+215&gt;:   je     0x4011d2 &lt;phase_6+222&gt;\n   0x00000000004011cd &lt;+217&gt;:   mov    %rdx,%rcx\n   0x00000000004011d0 &lt;+220&gt;:   jmp    0x4011bd &lt;phase_6+201&gt;\n   0x00000000004011d2 &lt;+222&gt;:   movq   $0x0,0x8(%rdx)\n   0x00000000004011da &lt;+230&gt;:   mov    $0x5,%ebp\n   0x00000000004011df &lt;+235&gt;:   mov    0x8(%rbx),%rax\n   0x00000000004011e3 &lt;+239&gt;:   mov    (%rax),%eax\n   0x00000000004011e5 &lt;+241&gt;:   cmp    %eax,(%rbx)\n   0x00000000004011e7 &lt;+243&gt;:   jge    0x4011ee &lt;phase_6+250&gt;\n   0x00000000004011e9 &lt;+245&gt;:   callq  0x40143a &lt;explode_bomb&gt;\n   0x00000000004011ee &lt;+250&gt;:   mov    0x8(%rbx),%rbx\n   0x00000000004011f2 &lt;+254&gt;:   sub    $0x1,%ebp\n   0x00000000004011f5 &lt;+257&gt;:   jne    0x4011df &lt;phase_6+235&gt;\n   0x00000000004011f7 &lt;+259&gt;:   add    $0x50,%rsp\n   0x00000000004011fb &lt;+263&gt;:   pop    %rbx\n   0x00000000004011fc &lt;+264&gt;:   pop    %rbp\n   0x00000000004011fd &lt;+265&gt;:   pop    %r12\n   0x00000000004011ff &lt;+267&gt;:   pop    %r13\n   0x0000000000401201 &lt;+269&gt;:   pop    %r14\n   0x0000000000401203 &lt;+271&gt;:   retq</code></pre></div>\n<p><code class=\"language-text\">size_t read_six_numbers(char*, int*)</code></p>\n<p>6个数 &#x3C; 6\n互相都不相同</p>\n<p>i > 0:6\ninp[i] = 0x7 - inp[i]</p>\n<p>感觉咱一下看不了那么长的</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">   0x000000000040116f &lt;+123&gt;:   mov    $0x0,%esi\n   0x0000000000401174 &lt;+128&gt;:   jmp    0x401197 &lt;phase_6+163&gt;\n   0x0000000000401176 &lt;+130&gt;:   mov    0x8(%rdx),%rdx\n   0x000000000040117a &lt;+134&gt;:   add    $0x1,%eax\n   0x000000000040117d &lt;+137&gt;:   cmp    %ecx,%eax\n   0x000000000040117f &lt;+139&gt;:   jne    0x401176 &lt;phase_6+130&gt;\n   0x0000000000401181 &lt;+141&gt;:   jmp    0x401188 &lt;phase_6+148&gt;\n   0x0000000000401183 &lt;+143&gt;:   mov    $0x6032d0,%edx\n   0x0000000000401188 &lt;+148&gt;:   mov    %rdx,0x20(%rsp,%rsi,2)\n   0x000000000040118d &lt;+153&gt;:   add    $0x4,%rsi\n   0x0000000000401191 &lt;+157&gt;:   cmp    $0x18,%rsi\n   0x0000000000401195 &lt;+161&gt;:   je     0x4011ab &lt;phase_6+183&gt;\n   0x0000000000401197 &lt;+163&gt;:   mov    (%rsp,%rsi,1),%ecx\n   0x000000000040119a &lt;+166&gt;:   cmp    $0x1,%ecx\n   0x000000000040119d &lt;+169&gt;:   jle    0x401183 &lt;phase_6+143&gt;\n   0x000000000040119f &lt;+171&gt;:   mov    $0x1,%eax\n   0x00000000004011a4 &lt;+176&gt;:   mov    $0x6032d0,%edx\n   0x00000000004011a9 &lt;+181&gt;:   jmp    0x401176 &lt;phase_6+130&gt;\n   0x00000000004011ab &lt;+183&gt;:   mov    0x20(%rsp),%rbx</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rsi 0x0:0x4:0x18 {\n    ecx = (rsp+rsi) // inp[i]\n    edx = 0x6032d0\n\n    if ecx &gt; 0x1 {\n        eax = 0x1:ecx {\n            rdx = (0x8+rdx)\n            eax ++\n        }\n    }\n\n    (rsp+0x20+rsi*2) = rdx\n}</code></pre></div>\n<p>rdx = (0x8+rdx) 这像链表\n(rsp+0x20+rsi*2) = rdx\nrsp+0x20+0x0  = linklist.get(0x7-inp[0])\nrsp+0x20+0x8  = linklist.get(0x7-inp[1])\nrsp+0x20+0x10 = linklist.get(0x7-inp[2])\nrsp+0x20+0x18 = linklist.get(0x7-inp[3])\nrsp+0x20+0x20 = linklist.get(0x7-inp[4])\nrsp+0x20+0x28 = linklist.get(0x7-inp[5])</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(gdb) x/28wx 0x6032d0\n0x6032d0 &lt;node1&gt;:       0x0000014c      0x00000001      0x006032e0      0x00000000\n0x6032e0 &lt;node2&gt;:       0x000000a8      0x00000002      0x006032f0      0x00000000\n0x6032f0 &lt;node3&gt;:       0x0000039c      0x00000003      0x00603300      0x00000000\n0x603300 &lt;node4&gt;:       0x000002b3      0x00000004      0x00603310      0x00000000\n0x603310 &lt;node5&gt;:       0x000001dd      0x00000005      0x00603320      0x00000000\n0x603320 &lt;node6&gt;:       0x000001bb      0x00000006      0x00000000      0x00000000</code></pre></div>\n<p>+8 刚好可以访问到第三列的地址</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">   0x00000000004011ab &lt;+183&gt;:   mov    0x20(%rsp),%rbx\n   0x00000000004011b0 &lt;+188&gt;:   lea    0x28(%rsp),%rax\n   0x00000000004011b5 &lt;+193&gt;:   lea    0x50(%rsp),%rsi\n   0x00000000004011ba &lt;+198&gt;:   mov    %rbx,%rcx\n   0x00000000004011bd &lt;+201&gt;:   mov    (%rax),%rdx\n   0x00000000004011c0 &lt;+204&gt;:   mov    %rdx,0x8(%rcx)\n   0x00000000004011c4 &lt;+208&gt;:   add    $0x8,%rax\n   0x00000000004011c8 &lt;+212&gt;:   cmp    %rsi,%rax\n   0x00000000004011cb &lt;+215&gt;:   je     0x4011d2 &lt;phase_6+222&gt;\n   0x00000000004011cd &lt;+217&gt;:   mov    %rdx,%rcx\n   0x00000000004011d0 &lt;+220&gt;:   jmp    0x4011bd &lt;phase_6+201&gt;\n   0x00000000004011d2 &lt;+222&gt;:   movq   $0x0,0x8(%rdx)\n   0x00000000004011da &lt;+230&gt;:   mov    $0x5,%ebp\n   0x00000000004011df &lt;+235&gt;:   mov    0x8(%rbx),%rax\n   0x00000000004011e3 &lt;+239&gt;:   mov    (%rax),%eax\n   0x00000000004011e5 &lt;+241&gt;:   cmp    %eax,(%rbx)\n   0x00000000004011e7 &lt;+243&gt;:   jge    0x4011ee &lt;phase_6+250&gt;\n   0x00000000004011e9 &lt;+245&gt;:   callq  0x40143a &lt;explode_bomb&gt;\n   0x00000000004011ee &lt;+250&gt;:   mov    0x8(%rbx),%rbx\n   0x00000000004011f2 &lt;+254&gt;:   sub    $0x1,%ebp\n   0x00000000004011f5 &lt;+257&gt;:   jne    0x4011df &lt;phase_6+235&gt;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rbx = list[0]\nrax = &amp;list[1]\nrsi = rsp+0x50 // may be end\nrcx = rbx\n\nrax = (rsp+0x28):0x8:(rsp+0x50) {\n    rdx = (rax)\n    (rcx+0x8) = rdx //? list[i].next = list[i+1]\n    rcx = rdx\n}\n\n(rdx+8) = 0x0 //? listlast.next = null\n\nebp = 5:0 {\n    rax = (rbx + 0x8)\n    eax = (rax)\n    if eax &gt; (rbx) {\n        explode_bomb()\n    }\n    rbx = (rbx + 0x8)\n}</code></pre></div>\n<p>绕得有点心态崩</p>\n<p>2 1 6 5 4 3</p>\n<p>5 6 1 2 3 4</p>\n<p>4 3 2 1 6 5</p>\n<p>OK, 顺序还搞反了一遍</p>\n<p>cmp 傻傻搞不清楚</p>"}},"pageContext":{"id":"792ab452-4aee-5902-9534-b49b8b8afd96"}},"staticQueryHashes":[]}