{"componentChunkName":"component---src-components-post-jsx","path":"/post/Linux Problems","result":{"data":{"markdownRemark":{"id":"4ffd92a9-45d1-5296-9d86-9a5ee58ba3c7","frontmatter":{"date":"April 21, 2019","draft":null,"tags":null,"title":"Linux Problems"},"html":"<p>记录一下遇到的几个问题。</p>\n<h2>Grub</h2>\n<h3>多系统启动项</h3>\n<p>在以前用过的 ubuntu deepin 之类的发行版中通过执行 <code class=\"language-text\">sudo update-grub</code> 就可以自动扫描并添加其他已经安装的系统的启动项，而这在 arch 上需要额外的步骤 。</p>\n<ol>\n<li>如果只安装了 grub 和 efibootmgr , 那么 <code class=\"language-text\">update-grub</code> 这个命令并不存在 。实际上<code class=\"language-text\">sudo update-grub</code> 等价于 <code class=\"language-text\">sudo grub-mkconfig -o /boot/grub/grub.cfg</code> 或者也可以 安装 <code class=\"language-text\">update-grub</code> 这个 aur 包（虽然咱没试过</li>\n<li>这时发现， 并不能自动探测到其他系统的引导文件 ， 通过在 <a href=\"https://wiki.archlinux.org/\">arch wiki</a> 上搜索 grub ，找到了这里 <a href=\"https://wiki.archlinux.org/index.php/GRUB#Detecting_other_operating_systems\">GRUB#Detecting<em>other</em>operating_systems</a> 。要达到 咱们的目的，需要安装 os-prober ，然后再 <code class=\"language-text\">sudo grub-mkconfig -o /boot/grub/grub.cfg</code></li>\n</ol>\n<h3>保存选择的启动项并设为默认</h3>\n<p>这个很简单,只需要更改 <code class=\"language-text\">grub</code> 配置文件 <code class=\"language-text\">/etc/default/grub</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token assign-left variable\">GRUB_DEFAULT</span><span class=\"token operator\">=</span>saved\n<span class=\"token assign-left variable\">GRUB_SAVEDEFAULT</span><span class=\"token operator\">=</span>true</code></pre></div>\n<p>参考 <a href=\"http://www.gnu.org/software/grub/manual/grub/grub.html#Simple-configuration\">grub manual</a></p>\n<h2>emacs</h2>\n<h3>中文输入法输入不了内容</h3>\n<p>需要更改环境变量，可以更改 <code class=\"language-text\">~/.xprofile</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>en_US.UTF-8\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LC_CTYPE</span><span class=\"token operator\">=</span>en_US.UTF-8</code></pre></div>\n<p>但是输入法的一些符号（<code class=\"language-text\">，</code>,<code class=\"language-text\">。</code>），在刚输入完汉字后打不出来 ，然而再输入一个空格或者其他字符就可以，而且目前就发现只有逗号和句号有这个问题。真是奇怪的问题 。</p>\n<h2>i3</h2>\n<h3>无线网络连接</h3>\n<p>本来在家里用的有线网络是没有这个问题，但是目前只有无线网络可用。之前一直使用的 <code class=\"language-text\">NetworkManager</code>，但是在 i3 并不能正常使用。经过一番搜索，好像安装 <code class=\"language-text\">nm-applet</code> 也可以在 i3 使用 <code class=\"language-text\">NetworkManager</code> （实际上包名为 <code class=\"language-text\">network-manager-applet</code>）, 并且在 i3 的 config 里找到了这个</p>\n<div class=\"gatsby-highlight\" data-language=\"conf\"><pre class=\"language-conf\"><code class=\"language-conf\"># NetworkManager is the most popular way to manage wireless networks on Linux,\n# and nm-applet is a desktop environment-independent system tray GUI for it.\n# exec --no-startup-id nm-applet</code></pre></div>\n<p>但是咱之所以用 i3 就是想要使用一个简单的桌面环境（之前用过的 dde，gnome, plasma 都动辄几百个包），然后咱找到了 <a href=\"https://wiki.archlinux.org/index.php/Iwd\">iwd</a> ,感觉太满足咱了，所以直接换 iwd</p>\n<p>但是用 iwd 连接无线网络后并不能上网，经过一番排除后，发现启动 dhcpcd 并使用 iwd 连接就可以。（不知道什么原因，猜测是 iwd 没有 dhcp ？）</p>\n<h3>多显示器</h3>\n<p>熟悉 xrandr 的话可以直接</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">xrandr --output eDP-1-1 --auto --left-of HDMI-0</code></pre></div>\n<p>如果需要自动调整</p>\n<p><code class=\"language-text\">~/.config/i3/config</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">exec</span> --no-startup-id xrandr --output eDP-1-1 --auto --left-of HDMI-0</code></pre></div>\n<p>GUI 前端可以用 <code class=\"language-text\">arandr</code></p>\n<p>在插入 VGA 时自动启动 <code class=\"language-text\">arandr</code>， 参考 <a href=\"https://wiki.archlinux.org/index.php/Udev#Execute_on_VGA_cable_plug_in\">wiki-udev</a></p>\n<p><code class=\"language-text\">/etc/udev/rules.d/95-monitor-hotplug.rules</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token assign-left variable\">KERNEL</span><span class=\"token operator\">==</span><span class=\"token string\">\"card0\"</span>, <span class=\"token assign-left variable\">SUBSYSTEM</span><span class=\"token operator\">==</span><span class=\"token string\">\"drm\"</span>, ENV<span class=\"token punctuation\">{</span><span class=\"token environment constant\">DISPLAY</span><span class=\"token punctuation\">}</span><span class=\"token operator\">=</span><span class=\"token string\">\":0\"</span>, ENV<span class=\"token punctuation\">{</span><span class=\"token environment constant\">XAUTHORITY</span><span class=\"token punctuation\">}</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/username/.Xauthority\"</span>, <span class=\"token assign-left variable\">RUN</span><span class=\"token operator\">+=</span><span class=\"token string\">\"/usr/bin/arandr\"</span></code></pre></div>"}},"pageContext":{"id":"4ffd92a9-45d1-5296-9d86-9a5ee58ba3c7"}},"staticQueryHashes":[]}